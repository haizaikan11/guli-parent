server:
  port: 8110 # 服务端口

spring:
  profiles:
    active: dev # 环境设置
  application:
    name: service-edu # 注册中心服务名
  datasource: # mysql数据库连接
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/guli_edu?serverTimezone=GMT%2B8&useSSL=false
    username: root
    password: root
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss   #时间格式
    time-zone: GMT+8  #时区的设置
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 # nacos服务地址
      sentinel:
        transport:
          port: 8081 # 跟控制台交流的端口，随意指定一个未使用的端口即可
          dashboard: localhost:8080 # 指定控制台服务的地址
        eager: true #取消控制台懒加载，服务启动即可看到sentinel中对当前服务的监控
        filter:
          url-patterns: /** #默认拦截规则为 /*
  #spring:
  redis:
    host: 192.168.126.129
    port: 6379
    database: 0
    password:  #默认为空
    lettuce:
      pool:
        max-active: 20  #最大连接数，负值表示没有限制，默认8
        max-wait: -1    #最大阻塞等待时间，负值表示没限制，默认-1
        max-idle: 8     #最大空闲连接，默认8
        min-idle: 0     #最小空闲连接，默认0
#mybatis日志
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath:com/wulx/guli/service/edu/mapper/xml/*.xml  #将xml文件加载运行环境
ribbon:
  MaxAutoRetries: 0 # 同一实例最大重试次数，不包括首次调用，默认0
  MaxAutoRetriesNextServer: 1 # 重试其他实例的最大重试次数，不包括首次所选的server，默认1
  ConnectTimeout: 10000 #连接建立的超时时长，默认1秒
  ReadTimeout: 10000 #处理请求的超时时间，默认为1秒
## 设置日志级别
#logging:
#  level:
#    root: warn
logging:
  level:
    com.wulx.guli.service.edu.feign.OssFileService: debug #以什么级别监控哪个接口

#开启Feign对Sentinel的支持
feign:
  sentinel:
    enabled: true
#不是设置日志级别
#logging:
#  level: error
